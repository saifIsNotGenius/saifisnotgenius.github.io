---
layout: post
title: "How I Setup this Blog"
description: "A post about how I set up this blog."
---

This blog is generated by Jekyll, published through GitHub Pages and its design inspiration I've taken from [this site](https://bestmotherfucking.website/). I tried to keep the whole blog site as simple as possible.

First of all, I want to acknowledge that I'm not a professional web designer or developer and I don't know Jekyll at all. I know programming and have a very basic knowledge html, css and javascript. I made this blog using mainly ChatGPT and organized the whole with my byte-sized tech knowledge. I instructed ChatGPT to make me a simple blog like the above mentioned site with Jekyll. This is the [link](https://chatgpt.com/share/6703dd42-ec4c-8000-ab7a-d26a90d94c11) to my chat with ChatGPT until when I'm writing the post.

Now let's get to the main stuff.

## Why Jekyll

Jekyll is static site generator. That is, it does not contains any CMS, database, and other heavy things. It helps you generate pages that contains plain html, css and javascript. There are other static site generator but I preferred Jekyll because GitHub officially supports Jekyll.

## Jekyll Installation on Your Machine Locally

Installing Jekyll locally is important as you will definitely want to see the preview of your posts before publishing them. I won't bother saying anything about how to install Jekyll and stuff. You can go to their [installation](https://jekyllrb.com/docs/installation/) page to know how to install Jekyll locally on your machine. It is nicely written.

## Listen to Me

Open command-line/terminal on your desired destination where you want to put the site's files. Run the following commands.

```
jekyll new blog
cd blog
ls
```
You should replace `blog` with your blog's name.

You will see that many folders and files have been created. I'm telling you which job is what.
```
_layouts - the html files inside this folder decides how your pages will be shown
_posts - inside this folder there are markdown files, each represents an unique post. In Jekyll, you write your posts in markdown and Jekyll generates html files for each of them.
_site - the actual html pages that Jekyll already generated and will be shown in site.
_config.yml - this file contains overall configs and preferences of your site.
about.markdown - this file represents the **About** page of your site.
index.markdown - this file represents the **Homepage** of your site.
```

The site's design mainly depends on the html files inside _layouts. You can modify them as you wish. To modify the homepage and posts' pages, you edit the `default.html` and `post.html` repectively. They may not already be present in _layouts. In that case, you need to create those files on your own.

Now, the come to `index.markdown`. It contains the contents of your **homepage**. You can modify it as you want. Same things apply to `about.markdown`, which contains contents of **About** page.

You can change your blog title, description, url etc. in _config.yml.

## How to Create Posts

To create posts, make files according to this naming format: `yy-mm-dd-title-of-your-post.markdown`. Inside this, first add the following lines:

```
---
layout: post
title: "Post Title"
description: "A blog post about something."
---
```

Change the title and description according to your post's title and description repectively. After that, you can happily write your post in markdown format.

## How to Run the Local Server

To run the local server to view your blog, you first open the command-line/terminal in your blog's main directory. Then run the following command:
```
bundle exec jekyll serve
```

You can access your blog site from [http://localhost:4000/](http://localhost:4000/).

## How to Publish on GitHub Pages

You can publish your blog using GitHub Pages for free. You have to create a new public (private repositories can't be served for free) repository naming `yourgithubusername.github.io`. Replace *yourgithubusername* with your actual GitHub username.

Now you need git. If you already have it installed on your local machine, then fine. Otherwise, [download](https://git-scm.com/downloads) and install it.

Now open the command-line/terminal in your blog's directory. Run the following commands:

```
git init
git remote add origin https://github.com/yourgithubusername/yourreponame.git
git branch -M main
git push -u origin main
```

And you're done. Your site will be live on [yourgithubusername.github.io](yourgithubusername.github.io) within a few seconds.

## Bonus: How to Display Math on Your Blog

You might have seen that I write mathematical equations in my posts. How? I use KaTeX for that. You can also use MathJax, but I prefer KaTeX for its speed. Adding KaTeX in your blog is easy.

Add the following line before `</head>` of _layouts/post.html:

```
<!-- KaTeX CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.15.2/dist/katex.min.css">
```

Then add the following lines of code before the `</body>` of _layouts/post.html:

```
<!-- KaTeX JS -->
        <script defer src="https://cdn.jsdelivr.net/npm/katex@0.16.0/dist/katex.min.js"></script>
        <script defer src="https://cdn.jsdelivr.net/npm/katex@0.16.0/dist/contrib/auto-render.min.js"></script>
        <script>
            document.addEventListener("DOMContentLoaded", function() {
                renderMathInElement(document.body, {
                    delimiters: [
                        { left: "$$", right: "$$", display: true },
                        { left: "$", right: "$", display: false },
                        { left: "\\(", right: "\\)", display: false },
                        { left: "\\[", right: "\\]", display: true }
                    ]
                });
            });
        </script>
```

That's it! Now you write inline equations inside `$ $` and block equations inside `$$ $$`.